[runtime]
sampler = metropolis
; sampler = emcee

[metropolis]
; save output every 50 samples
nsteps=20
; start at the specified position in the values file, not randomly
random_start = F
; take this many total samples
samples = 2000
; Tune the proposal from sample 200 to sample 2000 every 100 samples 
; by taking the covariance of the chain
tuning_frequency = 100
tuning_grace = 200
tuning_end = 2000

; [emcee]
; walkers = 64
; samples = 1000
; nsteps = 100

[output]
format=txt
filename=quartic_mcmc/mcmc_output.txt
verbosity=debug

[pipeline]
modules = cppt_sample consistency modified_class planck
values = quartic_mcmc/values.ini
priors = quartic_mcmc/priors.ini

extra_output = twopf_observables/k_piv twopf_observables/N_piv twopf_observables/A_s twopf_observables/A_t twopf_observables/n_s twopf_observables/n_t twopf_observables/n_s_lin twopf_observables/n_t_lin twopf_observables/n_s_spl twopf_observables/n_t_spl twopf_observables/r thrpf_observables/B_equi thrpf_observables/fNL_equi thrpf_observables/B_squ thrpf_observables/fNL_squ wavenumber_spectrum/spec_table failed_samples/no_end_inflation failed_samples/negative_Hsq failed_samples/integrate_nan failed_samples/zero_massless_time failed_samples/negative_epsilon failed_samples/eps_geq_three failed_samples/negative_pot failed_samples/noFind_hor_exit failed_samples/ICs_before_start failed_samples/leq_60_efolds failed_samples/varying_Spec

likelihoods = planck2015
quiet=F
debug=F
timing=F

[planck]
file = cosmosis-standard-library/likelihood/planck2015/planck_interface.so
data_1 = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/data/plik_lite_v18_TT.clik
data_2 = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/data/commander_rc2_v1.1_l2_29_B.clik
; You can also add more here
; and lensing files can be included with, e.g.:
;lensing_1 = /path/to/wherever/you/downloaded/data/smica_g30_ftl_full_pttptt.clik_lensing

; The consistency module translates between our chosen parameterization
; and any other that modules in the pipeline may want (e.g. camb)
[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py

[modified_class]
file = class-modified/class_interface.py
lmax = 2508
kmax = 50.0

[cppt_sample]
file = modules/cppt_module/cppt_sample/cppt_sample/Quartic_Inflation/build/libcppt_sample.so
M_P = 1.0
k_samples = 400
k_pivot = 0.002
